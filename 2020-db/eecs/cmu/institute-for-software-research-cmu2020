ISR17200 | Ethics and Policy Issues in Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17200&SEMESTER=S20 | instructors:Herbsleb, James description:Should autonomous robots make life and death decisions on their own? Should we allow them to select a target and launch weapons? To diagnose injuries and perform surgery when human doctors are not around? Who should be permitted to observe you, find out who your friends are, what you do and say with them, what you buy, and where you go? Do social media and personalized search restrict our intellectual horizons? Do we live in polarizing information bubbles, just hearing echoes of what we already know and believe? As computing technology becomes ever more pervasive and sophisticated, we are presented with an escalating barrage of decisions about who, how, when, and for what purposes technology should be used. This course will provide an intellectual framework for discussing these pressing issues of our time, as we shape the technologies that in turn shape us. We will seek insight through reading, discussion, guest lectures, and debates. Students will also undertake an analysis of a relevant issue of their choice, developing their own position, and acquiring the research skills needed to lend depth to their thinking. The course will enhance students ability to think clearly about contentious technology choices, formulate smart positions, and support their views with winning arguments.
ISR17214 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17214&SEMESTER=S20 | instructors:Garrod, CharlesBloch, Josh prereq:(15121 or 15122) and (15151 or 21127 or 21128) description:Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, and program and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object-oriented programming, (3) static and dynamic analysis for programs, and (4) concurrency. At the conclusion of this course, students will have substantial experience building medium-sized software systems in Java.
ISR17303 | Cryptocurrencies, Blockchains and Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17303&SEMESTER=S20 | instructors:Christin, Nicolas description:Cryptocurrencies such as Bitcoin have gained large popularity in recent years, in no small part due to the fantastic potential applications they could facilitate. This course will first provide an overview of the technological mechanisms behind cryptocurrencies and distributed consensus and distributed ledgers (blockchains), introducing along the way the necessary cryptographic tools. It will then focus on more advanced blockchain applications, such as smart contracts, that is, contracts written as code. Finally, the course will also introduce some of the legal and policy questions surrounding cryptocurrencies. Prerequisites: 15-213 or equivalent strongly recommended
ISR17313 | Foundations of Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17313&SEMESTER=F19 | instructors:Le Goues, ClaireHilton, Michael description:Note: This course previously offered as 15313.Students gain exposure to the fundamental principles of software engineering. This includes both core CS technical knowledge and the means by which this knowledge can be applied in the practical engineering of complex software in real-world settings. Topics related to software artifacts include coding, software architecture, measurement, and quality assurance of various qualities (e.g., robustness, security, performance, maintainability) with static and dynamic analysis, testing, code review, and inspection. Topics related to software process include requirements engineering, process models and evaluation, personal and team development, and supply chain issues including outsourcing and open source. This course has a strong technical focus, a strong focus on developing team skills, and will include both written and programming assignments. Students will get experience with the latest software engineering tools and practices.
ISR17331 | Information Security, Privacy, and Policy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17331&SEMESTER=F19 | instructors:Christin, NicolasSadeh, Norman description:Note: This course previously offered as 15-421. As layers upon layers of technology mediate increasingly rich business processes and social interactions, issues of information security and privacy are growing more complex too.  This course takes a multi-disciplinary perspective of information security and privacy, looking at technologies as well as business, legal, policy and usability issues.  The objective is to prepare students to identify and address critical security and privacy issues involved in the design, development and deployment of information systems.  Examples used to introduce concepts covered in the class range from enterprise systems to mobile and pervasive computing as well as social networking.  Format:  Lectures, short student presentations on topics selected together with the instructor, and guest presentations.  Target Audience: Primarily intended for motivated undergraduate and masters students with CS background.  Also open to PhD students interested in a more practical, multi-disciplinary understanding of information security and privacy.
ISR17333 | Privacy Policy, Law, and Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17333&SEMESTER=F19 | instructors:Bauer, LujoLibert, Timothy description:Note: Previously offered as 08-533. This course focuses on policy issues related to privacy from the perspectives of governments, organizations, and individuals. We will begin with a historical and philosophical study of privacy and then explore recent public policy issues. We will examine the privacy protections provided by laws and regulations, as well as the way technology can be used to protect privacy. We will emphasize technology-related privacy concerns and mitigation, for example: social networks, smartphones, behavioral advertising (and tools to prevent targeted advertising and tracking), anonymous communication systems, big data, and drones. This is part of a series of courses offered as part of the MSIT-Privacy Engineering masters program. These courses may be taken in any order or simultaneously. Foundations of Privacy (Fall semester) offers more in-depth coverage of technologies and algorithms used to reason about and protect privacy. Engineering Privacy in Software (Spring semester) focuses on the methods and tools needed to design systems for privacy. This course is intended primarily for graduate students and advanced undergraduate students with some technical background. Programming skills are not required. 8-733, 19-608, and 95-818 are 12-unit courses for PhD students. Students enrolled under these course numbers will have extra assignments and will be expected to do a project suitable for publication. 8-533 is a 9-unit course for undergraduate students. Masters students may register for any of the course numbers permitted by their program. This course will include a lot of reading, writing, and class discussion. Students will be able to tailor their assignments to their skills and interests. However, all students will be expected to do some writing and some technical work.
ISR17334 | Usable Privacy and Security | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17334&SEMESTER=S20 | instructors:Cranor, Lorrie description:Note: Previously offered as 08-734. There is growing recognition that technology alone will not provide all of the solutions to security and privacy problems. Human factors play an important role in these areas, and it is important for security and privacy experts to have an understanding of how people will interact with the systems they develop. This course is designed to introduce students to a variety of usability and user interface problems related to privacy and security and to give them experience in designing studies aimed at helping to evaluate usability issues in security and privacy systems. The course is suitable both for students interested in privacy and security who would like to learn more about usability, as well as for students interested in usability who would like to learn more about security and privacy. Much of the course will be taught in a graduate seminar style in which all students will be expected to do a weekly reading assignment and each week different students will prepare a presentation for the class. Students will also work on a group project throughout the semester. The course is open to all graduate students who have technical backgrounds. The 12-unit course numbers (08-734 and 5-836) are for PhD students and masters students. Students enrolled in these course numbers will be expected to play a leadership role in a group project that produces a paper suitable for publication.  The 9-unit 500-level course numbers (08-534 and 05-436) are for juniors, seniors, and masters students. Students enrolled in these course numbers will have less demanding project and presentation requirements.
ISR17355 | Program Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17355&SEMESTER=S20 | instructors:Le Goues, Claire prereq:(15251) and (15150 or 15214) description:This course covers both foundations and practical aspects of the automated analysis of programs, which is becoming increasingly critical to find software errors and assure program correctness. The theory of abstract interpretation captures the essence of a broad range of program analyses and supports reasoning about their correctness. Building on this foundation, the course will describe program representations, data flow analysis, alias analysis, inter-procedural analysis, dynamic analysis, Hoare Logic, and symbolic execution. Through assignments and projects, students will design and implement practical analysis tools that find bugs and verify properties of software. This course satisfies the Logic and Languages constrained elective category of the Computer Science major, and the Technical Software Engineering requirement for the Software Engineering minor.
ISR17356 | Software Engineering for Startups | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17356&SEMESTER=S20 | instructors:Hilton, MichaelMiller, Heather prereq:15213 or 15214 or 17214 or 17514 description:Startup engineering is critical to innovation.  The skills required to effectively prototype, launch, and scale products are vital to engineers everywhere, from fledgling companies founded in dorm rooms to local mid-size companies to internal startups from multi-national tech giants.  However, developing software in a startup environment poses unique engineering challenges.  These challenges include making and justifying foundational architectural and technical decisions despite extreme uncertainty; rapidly prototyping and evaluating new ideas and features, while building minimum viable products; prioritizing engineering effort in severely constrained environments; and communicating effectively both within a small engineering team and with internal and external non-technical stakeholders.  This course teaches the skills necessary to engineer successfully in a startup environment, through lectures, group projects, case study discussions, and guest speakers drawn from experienced, practicing startup engineers. This is an engineering-focused course; no entrepreneurship background is required or expected.  Students do not need to have a startup idea to participate fully.  Prerequisites: 15-214 OR 15-213
ISR17396 | Language Design and Prototyping: Language Design and Prototyping | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17396&SEMESTER=S20 | instructors:Aldrich, Jonathan prereq:17214 or 17514 or 15213 description:Many programmers think of programming languages as having a fixed, standard set of features--but in fact, languages are being extended all the time, and new languages are constantly being developed, providing great expressive power.  In this course, students will learn about techniques for designing and prototyping programming languages.  Design topics include language features, a practical approach to semantics, conceptual design techniques, and examples of both general purpose and domain-specific language designs.  Prototyping topics include interpreters, source-to-source translators, languages as libraries, and paper prototyping techniques used for lightweight user evaluations.  In course assignments, students will practice design and prototyping techniques, implementing prototype languages in several different styles.  The course will end with a project in which students design, implement, and evaluate their own programming language.
ISR17413 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17413&SEMESTER=S20 | instructors:Hilton, MichaelTimperley, Christopher description:This course is a project-based course in which students conduct a semester-long project for a real client in small teams. This is not a lecture-based course; after the first few weeks the course consists primarily of weekly team meetings with the course instructors, with teams making regular presentations on their software development process. Students will leave the course with a firsthand understanding of the software engineering realities that drive SE practices, will have concrete experience with these practices, and will have engaged in active reflection on this experience. After the course, students will have the teamwork, process, and product skills to be immediately competent in a software engineering organization, and will be able to evaluate the new processes and techniques they will encounter in the workplace.
ISR17415 | Software Engineering Reflection | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17415&SEMESTER=F19 | instructors:Scherlis, WilliamOzkaya, Ipek description:Note: This course previously offered as 17-413. This course is an opportunity to reflect on a software engineering experience you have had in industry. It is structured as a writers workshop, in which you will work with the instructor and other students to identify and flesh out a software engineering theme that is illustrated by your industry experience. You will prepare a 10-page report on this theme, comparable to a practitioners report at a conference like ICSE or OOPSLA, and a 30-minute presentation to match. This course fulfills a requirement of the Software Engineering Minor program, but students in other programs may take the course if they meet the prerequisite industry experience and if space is available.
ISR17422 | Building User-Focused Sensing Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17422&SEMESTER=S20 | instructors:Goel, MayankAgarwal, Yuvraj description:These days we are surrounded by sensing and computation. Smart devices, such as smartphones, smartwatches, are packed with sensors. While they are already very useful devices, we have only started to scratch the surface here. The aim of this class will be to introduce the students to building and understanding smart sensing devices. The course will include discussion into contribution of various fields, including human-computer interaction, embedded computing, computer vision, distributed systems, machine learning, signal processing, security, and privacy. We will discuss how these various disciplines are coming together to form an end-to-end system that generates useful and user-actionable data. We will take a hands-on approach towards building and evaluating these systems. The students will gain practical experience in developing sensing systems in different application domains, such as activity recognition, health sensing, gestural interaction, etc. You will learn about embedded systems and understand the advantages and limitations of different platforms. You will learn about sensors and how to interface them with the real world to be able to get useful and actionable data. You will learn how to build a network of sensors that can communicate with each other. You will also learn about storing the sensor data for visualization, analysis and presentation both locally and to the cloud. The course will be a combination of lectures, tutorials, class discussions, and demonstrations. Students will be evaluated based on 5 mini-projects/assignments, class participation, weekly reading summaries, and a final project. All hardware resources will be provided to the students and they will be given an option to take their final prototypes with them for the cost of the hardware components. Students should have reasonable programming experience and an interest in tinkering.
ISR17428 | Machine Learning and Sensing: Machine Learning and Sensing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17428&SEMESTER=F19 | instructors:Goel, Mayank description:Machine learning and sensors are at the core of most modern computing devices and technology. From Amazon Echo to Apple Watch to Google Photos to self-driving cars, making sense of the data coming from powerful but noisy sensors is the key challenge. The aim of the course will be to explore this intersection of sensors and machine learning, understand the inner workings on modern computing technologies, and design the future ones. We will cover data collection, signal processing, data processing, data visualization, feature engineering, machine learning tools, and some prototyping technologies. The course will focus on class discussions, hands-on demonstrations, and tutorials. Students will be evaluated on their class participation, multiple mini projects, and a final team project.
ISR17437 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17437&SEMESTER=S20 | instructors:Eppinger, Jeffrey prereq:17214 or 17514 or 15214 or 15213 or 18213 or 15513 or 14513 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
ISR17445 | Software Engineering for AI-Enabled Systems: Software Engineering for AI-Enabled Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17445&SEMESTER=F19 | instructors:Kaestner, ChristianKang, Eunsuk description:The course takes a software engineering perspective on building software systems with a significant machine learning or AI component. It discusses how to take an idea and a model developed by a data scientist (e.g., scripts and Jupyter notebook) and deploy it as part of scalable and maintainable system (e.g., mobile apps, web applications, IoT devices). Rather than focusing on modeling and learning itself, this course assumes a working relationship with a data scientist and focuses on issues of design, implementation, operation, and assurance and how those interact with the data scientists modeling.  This course is aimed at software engineers who want to understand the specific challenges of working with AI components and at data scientists who want to understand the challenges of getting a prototype model into production; it facilitates communication and collaboration between both roles.
ISR17480 | API Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17480&SEMESTER=S20 | instructors:Bloch, JoshGarrod, Charles prereq:15213 or 15214 or 17214 description:This class focuses on the design of programming interfaces, the APIs, within larger real-world software and ecosystems. We discuss the history and importance of APIs, and the principles behind designing good APIs. This includes study of specific examples of APIs, both good and bad, for inspiration and precaution. Students gain experience with the major steps of API design: gathering requirements, documenting, testing, implementing, refining, evolving, and reimplementing APIs. The principles taught are largely language-independent, though most examples are in Java or C. Students may be able to do assignments in other languages, within reason.
ISR17496 | ISR Undergraduate Independent Study | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17496&SEMESTER=F19 | instructors:Goel, Mayank description:Independent study with Mayank Goel
ISR17514 | Principles of Software Construction: Objects, Design, and Concurrency | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17514&SEMESTER=S20 | instructors:Garrod, CharlesBloch, Josh prereq:(15121 or 15122) and (21127 or 21128 or 15151) description:Software engineers today are less likely to design data structures and algorithms from scratch and more likely to build systems from library and framework components. In this course, students engage with concepts related to the construction of software systems at scale, building on their understanding of the basic building blocks of data structures, algorithms, and program and computer structures. The course covers technical topics in four areas: (1) concepts of design for complex systems, (2) object-oriented programming, (3) static and dynamic analysis for programs, and (4) concurrency. At the conclusion of this course, students will have substantial experience building medium-sized software systems in Java.
ISR17537 | Artificial Intelligence Methods for Social Good | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17537&SEMESTER=S20 | instructors:Fang, Fei description:Optimization: mathematical programming, robust optimization, influence maximization Game Theory and Mechanism Design: security games, human behavior modeling, auction and market equilibrium, citizen science Machine Learning: classification, clustering, probabilistic graphical models, deep learning Sequential Decision Making: Markov Decision Processes (MDPs), partially observable MDPs, online planning, reinforcement learning In addition to providing a deep understanding of these methods, the course will introduce which societal challenges they can tackle and how, in the areas of (i) healthcare, (ii) social welfare, (iii) security and privacy, (iv) environmental sustainability. The course will also cover special topics such as AI and Ethics and AI and Humans.   The course content is designed to not have too much overlap with other AI courses offered at CMU. Although the course is listed within SCS, it should be of interest to students in several other departments, including ECE, EPP and SDS.  The students in this 9-unit course are expected to have taken at least three mathematics courses covering linear algebra, calculus, and probability. The students will work in groups on a systematic literature review or a project exploring the possibility of applying existing AI tools to a societal problem, with a survey paper or technical report and presentation delivered at the end of the semester.
ISR17562 | Law of Computer Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17562&SEMESTER=F19 | instructors:Shamos, Michael description:NOTE: Previously offered as 08-532. A survey of how legislatures and courts cope with rapidly advancing computer technologies and how scientific information is presented to, and evaluated by, civil authorities.  The course is also an introduction to the legal process generally and the interaction between the legal system and technology organizations.  Topics include: patents, copyrights in a networked world, law of the Internet, free speech, data security, technology regulation, international law, and trans-border crime.  Open to juniors, seniors and graduate students in any school.  Open to sophomores by permission of the instructor.  Prerequisites: none.
ISR17601 | Data-driven Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17601&SEMESTER=F19 | instructors:Vadlamudi, Vijay description:Software engineers play a critical role in the value chain of todays technology driven enterprises more than ever before. We have witnessed several technology transformations which at their core have been enabled by software. Self-directed software engineering teams compete to deliver on ideas that merit investment. Further, continuous deployments force new demands on DevOps teams to rapidly deliver intuitive UX and information architecture that matches the users mental models of processes. Scalable, highly available, defect free systems characterize the world to which customers have become increasingly accustomed. Theres more to a superior user experience than what meets the naked eye. Digitization of information intensive processes affords large amounts of data at the disposal of DevOps teams. Teams evaluate the data for statistical evidence and patterns that present opportunities to continuously improve and meet customer expectations. To this end, software engineers will develop a more holistic and data driven view of the process leading to more informed decisions on the management of software quality. Students will learn statistical modeling and prediction techniques and apply them to the DevOps data sets generated on a team-based, project-centric approach to learning that the course is designed to deliver. Teams will take independent decisions on the choice of tools required to support the goals of the project.
ISR17606 | Privacy by Design Project Workshop | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17606&SEMESTER=S20 | description:Note: Previously offered as 08-606. This course is for students enrolled in the Privacy by Design Practicum or by permission of the instructor. Students will discuss privacy by design challenges and solutions.
ISR17607 | Privacy by Design Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17607&SEMESTER=S20 | instructors:Cranor, Lorrie description:NOTE: Previously offered as 08-607. Students in this course will work in small teams on a large semester-long Privacy By Design project for a project sponsor. Students will be expected to deliver a final report and project presentation at the end of the semester. This course is for students in the MSIT-Privacy Engineering program or by permission of the instructor.
ISR17608 | Privacy Engineering Independent Study | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17608&SEMESTER=S20 | description:NOTE: Previously offered as 08-608. Enrollment by permission of faculty only.
ISR17609 | Internship for Privacy Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17609&SEMESTER=F19 | instructors:Cranor, Lorrie description:NOTE: Previously offered as 08-610. Course is only available to students in the MSIT PE program.
ISR17611 | DevOps: Engineering for Deployment and Operations | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17611&SEMESTER=S20 | instructors:Yasar, Hasan description:DevOps is the term given to a modern movement to establish practices that significantly reduce the time to production of committed code. This time involves deployment - the period between the completion of the code by the developers and the placing of the code into normal production  and dealing with operations issues. Deployment time can be days, weeks, or even months when using normal development practices. Operational issues such as dealing with incidents and errors introduce other delays.  Modern internet companies deploy a system multiple or even dozens of times every day. Achieving this velocity requires coordinated process and design activities together with supporting tooling. This course will cover the deployment process and the associated tooling, it will highlight reasons why release schedules can be slow, and it will introduce the practices that are used to enable high velocity deployments. It will also cover the kinds of problems that are created because of high velocity and how modern internet companies deal with these problems. Please note: This is a required course for MSE-SS students. Students outside of the software engineering department may take this course but students of the MSE programs will have first priority.
ISR17625 | MITS Bootcamp | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17625&SEMESTER=S20 | instructors:Telang, Sujata description:In the Master of Information Technology Strategy program, students are required to undertake a comprehensive project.  The purpose of the Project is to provide students with a realistic context in which they can apply principles, methods, and techniques acquired in core, concentration and elective coursework.    The Project is a 2-semester, real world assignment.  Student teams work with an external client in an effort to build a cyber security / privacy software product or alternatively, develop documentation related to this critical area.     Because the Project is team-centric, it is often the most challenging aspect of the academic program.  Because of a lack of industrial experience breadth, teams spend an inordinate amount of time organizing, planning, and establishing basic processes.   Routine challenges, when not properly managed, readily become problematic.     The purpose of the MITS Project Bootcamp is to provide students with the essential skills required to effectively organize, manage, and lead a team. This course is for students of the MITS program only.
ISR17630 | Data Structures and Algorithms for Engineers | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17630&SEMESTER=F19 | instructors:Bass, MatthewTelang, Sujata description:I will, in fact, claim that the difference between a bad programmer and a good one is whether he considers his code or his data structures more important. Bad programmers worry about the code. Good programmers worry about data structures and their relationships.                -  Linus Torvalds The aim of this course is to provide students with a solid foundation in the concepts in the practical application of data structures and algorithms. This course emphasizes the practical application of techniques for writing and analyzing programs: data abstraction, algorithm verification, and analysis. This course will teach the students how to select and design data structures and algorithmic approaches that are appropriate for a given problem that they might encounter in practice. Students will learn practical techniques for reasoning about algorithmic correctness, computational complexities, performance, and various other properties and analyze tradeoffs among various algorithmic strategies. This course provides students a broad mixture of theoretical knowledge complemented with numerous opportunities for practical hands-on experience to apply course concepts.
ISR17631 | Information Security, Privacy, and Policy: Information, Security, Privacy &amp; Policy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17631&SEMESTER=F19 | instructors:Christin, NicolasSadeh, Norman description:Note: This course previously offered as 08-631. As layers upon layers of technology mediate increasingly rich business processes and social interactions, issues of information security and privacy are growing more complex too.  This course takes a multi-disciplinary perspective of information security and privacy, looking at technologies as well as business, legal, policy and usability issues.  The objective is to prepare students to identify and address critical security and privacy issues involved in the design, development and deployment of information systems.  Examples used to introduce concepts covered in the class range from enterprise systems to mobile and pervasive computing as well as social networking.  Format:  Lectures, short student presentations on topics selected together with the instructor, and guest presentations.  Target Audience: Primarily intended for motivated undergraduate and masters students with CS background.  Also open to PhD students interested in a more practical, multi-disciplinary understanding of information security and privacy.
ISR17632 | Engineering Run Time Malware Detection | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17632&SEMESTER=S20 | instructors:Morales, Jose description:This course focuses on teaching students how to design and implement a behavior based run-time malware detection system.  The course teaches how to proactively monitor a system for suspicious behaviors by building and running data collectors and analyzers that function in real time. It explores abstract suspicious behaviors, the various forms of detecting their occurrence, suspicion assessment, and identification of highly suspicious objects in a system in real time.  Topic covered include Windows minifilters, callback routines, and the windows filtering platform.  The concepts are applicable to any operating system but the implementation will be specific to the Windows 8/10.  All work will be done in virtual environments.  Experience in C/C++ is recommended along with any other high-level language.  Students will be provide with data collector source code and will create their own analysis engines.
ISR17637 | Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17637&SEMESTER=S20 | instructors:Eppinger, Jeffrey prereq:17214 or 17514 or 15214 or 15213 or 18213 or 15513 or 14513 description:This course will introduce concepts in programming web application servers. We will study the fundamental architectural elements of programming web sites that produce content dynamically. The primary technologies introduced will be the Django framework for Python and Java Servlets, but we will cover related topics as necessary so that students can build significant applications. Such topics include: HTTP, HTML, CSS, Javascript, XML, Design Patterns, Relational and Non-relational Databases, Object-Relation Mapping tools, Security, Web Services, Cloud Deployment, Internationalization, and Scalability and Performance Issues. Students must be comfortable programming in Java and/or Python to register for this course. Students must provide their own computer hardware for this course. Please see the Related URL above for more information.
ISR17640 | IoT, Big Data, and ML: A Hands-on Approach | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17640&SEMESTER=S20 | instructors:Vadlamudi, VijayCheng, Shang-Wen description:This course is designed to teach IoT concepts, big data, and machine learning techniques using a hands-on approach. An IoT system simulating an order fulfillment process is central to the hands-on learning of the concepts and techniques. Students will work in 4-5 person teams to enable the system and implement the requirements. In doing so, they will incorporate sound design principles of software engineering acquired in lectures. Students will capture the data generated during the execution of the system as it fulfills orders that are received from a front-end system developed by the students.    Students will be expected to prepare, process, and model the data for statistical analysis applying techniques taught in class. They will then visualize, analyze and interpret the results, and implement improvements to obtain a 360-degree experience of a business application using the automated system.   This course will provide insight into the ways in which business enterprises think about leveraging technology and software in the management of their production operations. The course prepares students for professional opportunities requiring such skills allowing them to identify use cases that facilitate innovation and promote competitiveness.
ISR17645 | Software Engineering for AI-Enabled Systems: Software Engineering for AI-Enabled Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17645&SEMESTER=F19 | instructors:Kaestner, ChristianKang, Eunsuk description:The course takes a software engineering perspective on building software systems with a significant machine learning or AI component. It discusses how to take an idea and a model developed by a data scientist (e.g., scripts and Jupyter notebook) and deploy it as part of scalable and maintainable system (e.g., mobile apps, web applications, IoT devices). Rather than focusing on modeling and learning itself, this course assumes a working relationship with a data scientist and focuses on issues of design, implementation, operation, and assurance and how those interact with the data scientists modeling.  This course is aimed at software engineers who want to understand the specific challenges of working with AI components and at data scientists who want to understand the challenges of getting a prototype model into production; it facilitates communication and collaboration between both roles.
ISR17646 | Business for Engineers | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17646&SEMESTER=S20 | instructors:Vadlamudi, Vijay description:This course introduces the engineering student to fundamental project management principles such as finance, operations, marketing and administration.    A goal of the course is to develop the essential skills to critically assess proposals, solve problems, and evaluate/choose approaches in the context of a given business challenge.  At the conclusion of the course, students will have developed an organized set of business activities necessary in making informed enterprise decisions.
ISR17648 | Engineering Data Intensive Scalable Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17648&SEMESTER=S20 | instructors:Bass, Matthew description:Internet services companies such as Google, Yahoo, Amazon, and Facebook have pioneered systems that have achieved unprecedented scale while still providing high level availability and a high cost-performance. These systems differ from mainstream high performance systems in fundamental ways.  They are data intensive rather than compute intensive as we see with mainstream super computers spending the bulk of their time performing data I/O and manipulation rather than computation. They need to inherently support scalability, typically having high reliability and availability demands as well.  Given that they often operate in the commercial space the cost-performance of these systems needs to be such that the organizations dependent on such systems can turn a profit. Designing and building these systems require a specialized set of skills. This course will cover the set of topics needed in order to design and build data intensive scalable systems. In this domain engineers not only need to know how to architect systems that are inherently scalable, but to do so in a way that also supports high availability, reliability, and performance. Given the large distributed nature of these systems basic distributed systems concepts such as consistency and time and synchronization are also important.  These systems largely operate around the clock, placing an emphasis on operational concerns. This course will introduce students to these concerns with the intent that they understand things like deploying, monitoring, and upgrading impact the design. The course will be a hands-on project oriented course. The students will gain exposure to the core concepts needed to design and build such systems as well as current technologies in this space. Please note: This is a required course for MSE-SS students. Students outside of the software engineering department may take this course but students of the MSE programs will have first priority.
ISR17649 | Artificial Intelligence for Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17649&SEMESTER=F19 | instructors:Breaux, Travis description:Advances in artificial intelligence (AI) and machine learning (ML) offer new opportunities in software engineering to explore the design space and improve software quality. This includes discovering interactions among natural language requirements, prioritizing feature requests, and finding and fixing bugs. Consequently, software engineers must take on the role of data scientist, which entails curating datasets, understanding the trade-offs in statistical models, and learning to evaluate their models. This course aims to introduce students to advances in natural language processing (NLP), including symbolic and statistical NLP techniques, and in deep learning to analyze software artifacts. The course will emphasize algorithm setup and configuration, data preparation, analytic workflow, and evaluation. Datasets will be drawn from industrial requirements, mobile app reviews, bug reports and source code with documented vulnerabilities. At course end, students will understand terminology and have hands on experience to help guide their decisions in applying AI to contemporary engineering problems.
ISR17651 | Models of Software Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17651&SEMESTER=S20 | instructors:McLaughlin, Dawn description:Scientific foundations for software engineering depend on the use of precise, abstract models for describing and reasoning about properties of software systems. This course considers a variety of standard models for representing sequential and concurrent systems, such as state machines, algebras, and traces. It shows how different logics can be used to specify properties of systems, such as functional correctness, deadlock freedom, and internal consistency. Concepts such as compositionality, abstraction, invariants, non-determinism, and inductive definitions are recurrent themes throughout the course. After completing this course, students will:  1. Understand the strengths and weaknesses of certain models and logics including state machines, algebraic and process models, and temporal logic;  2. Be able to select and describe appropriate abstract formal models for certain classes of systems, describe abstraction relations between different levels of description, and reason about the correctness of refinements;  3. Be able to prove elementary properties about systems described by the models introduced in the course; and  4. Understand some of the strengths and weakness of formal automated reasoning tools.    Prerequisites: Undergraduate discrete math including first-order logic, sets, functions, relations, and simple proof techniques such as induction.   Sections D, PP and G are NOT available for on-campus students.   Admission to the class is by approval from the instructor: If you are not MSE/MSIT-SE/MITS, send email to garlan@cs.cmu.edu for permission to enroll. The email should briefly describe your background, whether you have taken an undergraduate discrete math course, and why you would like to take the course. The course must be taken for a letter grade (not pass/fail).   This is a graduate level course.
ISR17652 | Methods: Deciding What to Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17652&SEMESTER=F19 | instructors:Damasceno, Antonio description:Sections D and PP are NOT available for on-campus students. Practical development of software requires an understanding of successful methods for bridging the gap between a problem to be solved and a working software system. In this course you will study a variety of ways of understanding the problem to be solved by the system youre developing and of framing an  appropriate solution to that problem. After completing this course, you will be able to: identify different classes of problems and their structures; analyze technical, organizational, usability, business, and marketing constraints on solutions; apply engineering approaches to frame solutions; understand how your understanding of the problem should be reflected in the software design. PREREQUISITE: minimum of 3 months hands-on software development experience in industry.  Students not accepted into the MSE program must present a current resume showing relevant industrial experience to department coordinator. This course is offered to only MSE/MITS and MSIT-SE students for fall semester. This course is for graduate students only. This course is for letter grade only (no pass/fail grades). To register for Methods course, you will need a requirement of a minimum of 3 mos hands-on software  development experience in industry.  Please submit a statement that gives the company, the dates, and a sentence or two about what you were actually doing during that time  (i.e. programming, testing, other things actually involved in software development)to jdh@cs.cmu.edu.  This is a graduate course.  Only undergrad SE minors may take this course.
ISR17653 | Managing Software Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17653&SEMESTER=F19 | instructors:Miranda, EduardoTelang, Sujata description:Sections D, F, PP and G are NOT available for on-campus students.  Large scale software development requires the ability to manage resources - both human and computational - through control of the development process. This course provides the knowledge and skills necessary to lead a project team, understand the relationship of software development to overall product engineering, estimate time and costs, and understand the software process.  After completing this course, students will:   1. be able to write a software project management plan, addressing issues of risk analysis, schedule, costs, team organization, resources, and technical approach  2. be able to define the key process areas of the Capability Maturity Model and the technology and practices associated with each and a variety of software development life cycle models and explain the strengths, weaknesses, and applicability of each   3. understand the relationship between software products and overall products (if embedded), or the role of the product in the organizational product line  4. understand the legal issues involved in liability, warranty, patentability, and copyright  5. understand the purpose and limitations of software development standards and be able to apply sensible tailoring where needed  6. be able to use software development standards for documentation and implementation   7. be able to apply leadership principles  8. be able to perform requirements elicitation    REQUIREMENT:  Students must have had industrial software engineering experience with a large project, or a comprehensive undergraduate course in software engineering.    This course is for letter grade only. Contact the instructor (mirandae@andrew.cmu.edu) for permission to join the class.  This is a course for graduate students.  Only undergrad SE minors may take this course.
ISR17654 | Analysis of Software Artifacts | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17654&SEMESTER=S20 | instructors:Gennari, JeffreyKaestner, Christian description:Analysis is the systematic examination of an artifact to determine its properties. This course will focus on analysis of software artifacts--primarily code, but also including analysis of designs, architectures, and test suites. We will focus on functional properties, but also cover non-functional properties like performance and security. In order to illustrate core analysis concepts in some depth, the course will center on static program analysis; however, the course will also include a breadth of techniques such as testing, model checking, theorem proving, dynamic analysis, and type systems.  The course will balance theoretical discussions with lab exercises in which students will apply the ideas they are learning to real artifacts.  After completing this course, students will:     * know what kinds of analyses are available and how to use them     * understand their scope and power,when they can be applied and what conclusions can be drawn from their results     * have a grasp of fundamental notions sufficient to evaluate new kinds of analysis when they are developed     * have some experience selecting and writing analyses for a real piece of software, applying them and interpreting the results    Ph.D. students taking the 17-754 version of the course will gain a broad overview of the analysis research literature and in-depth knowledge of a particular sub-area through a course project.    Requirement: A recent discrete math course and programming experience.  Strongly Recommended: Models of SW Development course (17-651) before taking this course.  This course is for letter grade only (no pass/fail grades).  This is a graduate course.  Only undergrad SE minors may take this course with the instructors permission. Please note: Students outside of the software engineering department may take this course but students of the MSE programs will have first priority.
ISR17655 | Architectures for Software Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17655&SEMESTER=S20 | instructors:Greenhalgh Lubas, Debra description:Successful design of complex software systems requires the ability to describe, evaluate, and create systems at an architectural level of abstraction.  This course introduces architectural design of complex software systems.  The course considers commonly-used software system structures, techniques for designing and implementing these structures, models and formal notations for characterizing and reasoning about architectures, tools for generating specific instances of an architecture, and case studies of actual system architectures. It teaches the skills and background students need to evaluate the architectures of existing systems and to design new systems in principled ways using well-founded architectural paradigms. After completing this course, students will be able to: 1. describe an architecture accurately 2. recognize major architectural styles in existing software systems 3. generate architectural alternatives for a problem and choose among them 4. construct a medium-sized software system that satisfies an architectural specification 5. use existing definitions and development tools to expedite such tasks 6. understand the formal definition of a number of architectures and be able to reason about the properties of those architectures 7. use domain knowledge to specialize an architecture for a particular family of applications.  REQUIREMENT: Experience with at least one large software system, either through industrial software development experience or an undergraduate course in software engineering, compilers, operating sys., or the like. This course is for letter grade only.  Instructor wants each student who wants to take his Architectures class to have worked on a significant software system in your courses or in industry. This is a graduate course.  Please note: Students outside of the software engineering department may take this course but students of the MSE programs will have first priority.
ISR17656 | Communication for Software Engineers I | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17656&SEMESTER=F19 | instructors:Ciroli, JenniferKolenich, Peter description:This seminar is designed for graduate students in software engineering.  Technical communication experts introduce principles and approaches for  writing and speaking effectively. Students have opportunities to practice  writing, speaking, and listening skills. Documents and presentations for the MSE Studio and core courses are integrated into seminar instruction.  Class participation is essential.
ISR17657 | Communication for Software Engineers II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17657&SEMESTER=S20 | instructors:Ciroli, JenniferKolenich, Peter description:This course is for Master of Software Engineering and Master of Science in Information Technology in Software Engineering students only.
ISR17658 | MITS Seminar I | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17658&SEMESTER=F19 | instructors:Telang, Sujata description:The MITS seminar occurs in both the fall and the spring semesters.  The Seminar brings together a cohort of students to explore topics of particular interest to the Navy, and includes special presentations by military and civilian leaders.  In addition to these guest lectures, students are required to attend weekly seminars offered in various departments across the university, and to write and submit a summary paragraph on each seminar that they attend in support of their learning and attendance.  MITS students are required to enroll in the Seminar in the first fall semester and the subsequent spring term.  Each Seminar registration counts as 3 units of degree completion credit.
ISR17659 | MITS Seminar II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17659&SEMESTER=S20 | instructors:Telang, Sujata description:The MITS seminar occurs in both the fall and the spring semesters.  The Seminar brings together a cohort of students to explore topics of particular interest to the Navy, and includes special presentations by military and civilian leaders.  In addition to these guest lectures, students are required to attend weekly seminars offered in various departments across the university, and to write and submit a summary paragraph on each seminar that they attend in support of their learning and attendance.  MITS students are required to enroll in the Seminar in the first fall semester and the subsequent spring term.  Each Seminar registration counts as 3 units of degree completion credit. Please note that this course is for students of the MITS program only.
ISR17662 | Law of Computer Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17662&SEMESTER=F19 | instructors:Shamos, Michael description:NOTE: Previously offered as 08-632. This course consists of the first half of the 12-unit course 17-762.  It is both a survey of computer law and an examination of how courts evaluate technological evidence in their decision-making. It deals with the most important and controversial issues in technology law today. The material is divided into six primary subjects: 1. Legal process: how courts operate, how lawsuits are conducted, what happens in appeals, who has to obey the determination of a court, over whom can a court exercise power, and regulatory law. 2. Evidence: what has to be proven to a court and how it is done, rules of evidence, burdens of proof, expert testimony. 3. Business Transactions: software licenses, clickwrap contracts, electronic transactions. 4. Personal Intrusions: social media, libel and defamation, data privacy, position monitoring. 5. Intellectual Property: trade secrets and confidentiality agreements. No legal background is required or assumed. This is not a law school course. Great effort is expended to keep the syllabus current based on breaking legal events. Therefore, the content and ordering of lectures may vary somewhat as the course progresses.
ISR17665 | Program Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17665&SEMESTER=S20 | instructors:Le Goues, Claire prereq:(15251) and (15214 or 15150) description:This course covers both foundations and practical aspects of the automated analysis of programs, which is becoming increasingly critical to find software errors and assure program correctness. The theory of abstract interpretation captures the essence of a broad range of program analyses and supports reasoning about their correctness. Building on this foundation, the course will describe program representations, data flow analysis, alias analysis, inter-procedural analysis, dynamic analysis, Hoare Logic, and symbolic execution. Through assignments and projects, students will design and implement practical analysis tools that find bugs and verify properties of software. This course satisfies the Logic and Languages constrained elective category of the Computer Science major, and the Technical Software Engineering requirement for the Software Engineering minor.  Prerequisites: 15-251 and (15-150 or 15-214).  Related URL: http://www.cs.cmu.edu/aldrich/courses/17-355-18sp/
ISR17667 | Internship for Software Engineers | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17667&SEMESTER=F19 | description:Students will get hands on practical work experience working on real-world problems in an industry, government or non-profit setting.
ISR17671 | Software Development Studio I | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17671&SEMESTER=S20 | instructors:Breaux, TravisTelang, SujataMiranda, EduardoBass, Matthew description:Registration in the Software Development Studio is limited to those students who have been accepted into the Master of Software Engineering Program (MSE/MSIT-SE) or those students who are invited by the faculty to register.  The Studio provides students with a laboratory for direct application of concepts  learned in core courses.
ISR17673 | Software Development Studio III | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17673&SEMESTER=F19 | instructors:Telang, SujataBass, MatthewMiranda, Eduardo description:Registration in the Software Development Studio is limited to those students who have been accepted into the Master of Software Engineering Program or those students who are invited by the faculty to register.  The Studio provides students with a laboratory for direct application of concepts learned in core courses.
ISR17675 | Software Engineering Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17675&SEMESTER=F19 | description:Registration in Software Engineering Practicum is limited to those students who have been accepted into the Master of Software Engineering Program (MSE) or those students who are invited by the faculty to register. Software Engineering Practicum provides students with a laboratory for direct application of concepts learned in core courses.
ISR17676 | Software Engineering Bootcamp | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17676&SEMESTER=S20 | instructors:Telang, Sujata description:This course is for Software Engineering students only.
ISR17677 | MSIT Project I | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17677&SEMESTER=S20 | instructors:Breaux, TravisBass, MatthewMiranda, EduardoTelang, Sujata description:The project is a students opportunity to demonstrate their software engineering knowledge in a real-live software project.  The focus of that demonstration will be the material learned in the core courses, and the electives the student has taken. The Project is a mentor guided software project that will focus on major aspects of the software development life-cycle in detail.  Admission is by permission only.  The Project may also be done in very small teams established with the mentors in advance of beginning the project.  All the people on the team must have completed the core courses in the MSIT Program prior to beginning the Project.  The Project can be completed on or off campus.  Summary of steps for a Project: .  Propose a project using the defined formal format provided.  In the proposal you will provide:  (1) An Executive summary (2) Definition of the work to be completed, which will include:  (a) Deliverables   (b) Time lines  (c) Two Reviews (mid point presentation and Final presentation)  (d) Final report .  Discuss the project with a designated faculty mentor .  Discuss the project with a technical mentor (Certain requirements must be met by your technical advisor, speak to your mentor) .  Get your proposal signed off (The CMU director faculty mentor and your technical mentor will approve your Project proposal.) .  Begin the project, reporting periodically to the faculty mentor and workplace mentor.  Another form of project is to subcontract with a MSE team to provide deliverables.  This option would be primarily available to on campus MSIT students.  The project will be an independent part of the MSE project which must be deliverable if the MSE project fails.  Work with your mentor to insure this aspect of the project.
ISR17678 | MSIT Project II | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17678&SEMESTER=S20 | instructors:Telang, Sujata description:MSIT Project in Software Engineering II is a continuation of the MSIT Project I from another semester.
ISR17681 | Java for Application Programmers | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17681&SEMESTER=S20 | instructors:Lee, Terry description:This course provides an intensive exploration of computer programming in the Java Language for students who have had some prior, but perhaps limited, programming experience in Java or in some other programming language. The course starts with a review of the fundamental topics of programming in Java (data types, operators, control structures) along with discussions of object oriented programming (classes, instances, and class hierarchies). After covering the basics we move on using Java to cover simple graphical user interfaces (using Swing), file I/O, concurrency (i.e., threads), network I/O (HTTP), simple data structures (lists and maps).  Students are required to have a reasonably modern laptop computer on which they will need to install the Java software used for this course. This course is open to undergraduate students who have some programming experience.
ISR17682 | JEE Web Application Development | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17682&SEMESTER=F19 | instructors:Eppinger, Jeffrey description:Note: This course previously offered as 08-672. This course will introduce concepts in programming web application servers. We will study of the fundamental architectural elements of programming web sites that produce content dynamically. We will be demonstrating the course using Java Servlets and Java Server Pages.  We will also cover the related topics as necessary so that students may build significant applications. Such topics are expected to include: HTML, CSS, HTTP, Relational and Non-Relational Databases, Object-Relation Mapping Tools, Security Issues, AJAX, and Cloud Deployment.  Students are required to be familiar with Java Programming before taking this course.  Those who are not are encouraged to take 08-671 in mini 1 before taking this course.  Students are required to have a reasonably modern laptop computer on which they need to install the Java software used for this course.
ISR17683 | Data Structures for Application Programmers | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17683&SEMESTER=S20 | instructors:Lee, Terry description:This course is an introduction to Data Structures and a few fundamental algorithms for students with some prior programming experience (functions, loops and arrays mainly in Java). It covers the conceptual and implementation views of some common data structures and algorithms. It also goes over the Java Collections (such as List, ArrayList, LinkedList, Set, HashSet, TreeSet, Map, HashMap, TreeMap, PriorityQueue) to solidify the understanding of the data structures. There is an introduction to the analysis of algorithms that operate on them. Following learning-by-doing methodology, there will be many repetitions of writing code and reviews of the items covered in lectures. Students are required to be familiar with Java Programming before taking this course. Those who are not are encouraged to take 17-681 in mini 3 before taking this course. Students are required to have a reasonably modern laptop computer on which install the Java software used for this course. This course is open to undergraduate students who have some programming experience.
ISR17684 | Ethics and Policy Issues in Computing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17684&SEMESTER=S20 | instructors:Herbsleb, James description:Should autonomous robots make life and death decisions on their own? Should we allow them to select a target and launch weapons? To diagnose injuries and perform surgery when human doctors are not around? Who should be permitted to observe you, find out who your friends are, what you do and say with them, what you buy, and where you go? Do social media and personalized search restrict our intellectual horizons? Do we live in polarizing information bubbles, just hearing echoes of what we already know and believe? As computing technology becomes ever more pervasive and sophisticated, we are presented with an escalating barrage of decisions about who, how, when, and for what purposes technology should be used. This course will provide an intellectual framework for discussing these pressing issues of our time, as we shape the technologies that in turn shape us. We will seek insight through reading, discussion, guest lectures, and debates. Students will also undertake an analysis of a relevant issue of their choice, developing their own position, and acquiring the research skills needed to lend depth to their thinking. The course will enhance students ability to think clearly about contentious technology choices, formulate smart positions, and support their views with winning arguments.
ISR17685 | Dynamic Network Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17685&SEMESTER=S20 | instructors:Carley, Kathleen prereq:36200 description:Who knows who? Who knows what? Who is influential? What is the social network, the knowledge network, the activity network? How do ideas, products  diseases propagate through groups and impact these networks? Does social media change the way these networks operate? Questions such as these  millions of others require a network perspective and an understanding of how ties among people, ideas, things,  locations connect, constrain  enable activity. In the past decade there has been an explosion of interest in network science moving from the work on social networks and graph theory to statistical and computer simulation models. Network analysis, like statistics, now plays an role in most empirical fields.  Network science is a broad and multi-disciplinary field. In this class, students will gain an appreciation of the history of the field, the difference between social networks and social media, the difference graph-based metrics for network analysis and graphical models, the use of traditional and high dimensional network models, and the advances in this field. Applications and issues discussed will include: social media analytics, semantic networks, task networks, organizational design and teams, machine learning and network analysis, generative models, terrorism and crime, health, and fake news. Methods for network data collection, analysis, visualization, and interpretation are covered. Students produce original research in which network data is analyzed using the methods covered in the class
ISR17696 | Language Design and Prototyping: Language Design and Prototyping | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17696&SEMESTER=S20 | instructors:Aldrich, Jonathan prereq:15213 or 17214 or 17514 description:Many programmers think of programming languages as having a fixed, standard set of features--but in fact, languages are being extended all the time, and new languages are constantly being developed, providing great expressive power.  In this course, students will learn about techniques for designing and prototyping programming languages.  Design topics include language features, a practical approach to semantics, conceptual design techniques, and examples of both general purpose and domain-specific language designs.  Prototyping topics include interpreters, source-to-source translators, languages as libraries, and paper prototyping techniques used for lightweight user evaluations.  In course assignments, students will practice design and prototyping techniques, implementing prototype languages in several different styles.  The course will end with a project in which students design, implement, and evaluate their own programming language.
ISR17699 | Independent Study | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17699&SEMESTER=S20 | instructors:Breaux, Travis description:This independent study is for Master Software Engineering and Master of Science in Information Technology - Software Engineering on-campus students only.
ISR17702 | Current Topics in Privacy Seminar | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17702&SEMESTER=S20 | instructors:Libert, TimothySadeh, Norman description:Note: Previously offered as 08-602. In this seminar course students will discuss recent papers and current public policy issues related to privacy. Privacy professionals from industry, government, and non-profits will deliver several guest lectures each semester.
ISR17703 | Cryptocurrencies, Blockchains and Applications | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17703&SEMESTER=S20 | instructors:Christin, Nicolas description:Cryptocurrencies such as Bitcoin have gained large popularity in recent years, in no small part due to the fantastic potential applications they could facilitate. This course will first provide an overview of the technological mechanisms behind cryptocurrencies and distributed consensus and distributed ledgers (blockchains), introducing along the way the necessary cryptographic tools. It will then focus on more advanced blockchain applications, such as smart contracts, that is, contracts written as code. Finally, the course will also introduce some of the legal and policy questions surrounding cryptocurrencies. Prerequisites: 15-213 or equivalent strongly recommended
ISR17705 | ISR Ph.D Alternative Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17705&SEMESTER=F19 | instructors:Aldrich, Jonathan description:None
ISR17706 | ISR Ph.D Elective | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17706&SEMESTER=F19 | instructors:Aldrich, Jonathan description:None
ISR17722 | Building User-Focused Sensing Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17722&SEMESTER=S20 | instructors:Goel, MayankAgarwal, Yuvraj description:These days we are surrounded by sensing and computation. Smart devices, such as smartphones, smartwatches, are packed with sensors. While they are already very useful devices, we have only started to scratch the surface here. The aim of this class will be to introduce the students to building and understanding smart sensing devices. The course will include discussion into contribution of various fields, including human-computer interaction, embedded computing, computer vision, distributed systems, machine learning, signal processing, security, and privacy. We will discuss how these various disciplines are coming together to form an end-to-end system that generates useful and user-actionable data. We will take a hands-on approach towards building and evaluating these systems. The students will gain practical experience in developing sensing systems in different application domains, such as activity recognition, health sensing, gestural interaction, etc. You will learn about embedded systems and understand the advantages and limitations of different platforms. You will learn about sensors and how to interface them with the real world to be able to get useful and actionable data. You will learn how to build a network of sensors that can communicate with each other. You will also learn about storing the sensor data for visualization, analysis and presentation both locally and to the cloud. The course will be a combination of lectures, tutorials, class discussions, and demonstrations. Students will be evaluated based on 5 mini-projects/assignments, class participation, weekly reading summaries, and a final project. All hardware resources will be provided to the students and they will be given an option to take their final prototypes with them for the cost of the hardware components. Students should have reasonable programming experience and an interest in tinkering.
ISR17728 | Machine Learning and Sensing: Machine Learning and Sensing | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17728&SEMESTER=F19 | instructors:Goel, Mayank description:Machine learning and sensors are at the core of most modern computing devices and technology. From Amazon Echo to Apple Watch to Google Photos to self-driving cars, making sense of the data coming from powerful but noisy sensors is the key challenge. The aim of the course will be to explore this intersection of sensors and machine learning, understand the inner workings on modern computing technologies, and design the future ones. We will cover data collection, signal processing, data processing, data visualization, feature engineering, machine learning tools, and some prototyping technologies. The course will focus on class discussions, hands-on demonstrations, and tutorials. Students will be evaluated on their class participation, multiple mini projects, and a final team project.
ISR17731 | Foundations of Privacy | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17731&SEMESTER=F19 | instructors:Fanti, Giulia description:Note: Previously offered as 08-604. Privacy is a significant concern in modern society. Individuals share personal information with many different organizations - healthcare, financial and educational institutions, the census bureau, Web services providers and online social networks - often in electronic form. Privacy violations occur when such personal information is inappropriately collected, shared or used. We will study privacy in a few settings where rigorous definitions and enforcement mechanisms are being developed - statistical disclosure limitation (as may be used by the census bureau in releasing statistics), semantics and logical specification of privacy policies that constrain information flow and use (e.g., by privacy regulations such as the HIPAA Privacy Rule and the Gramm-Leach-Bliley Act), principled audit and accountability mechanisms for enforcing privacy policies, anonymous communication protocols - and other settings in which privacy concerns have prompted much research, such as in social networks, location privacy and Web privacy (in particular, online tracking  targeted advertising).
ISR17733 | Privacy Policy, Law, and Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17733&SEMESTER=F19 | instructors:Libert, TimothyBauer, Lujo description:NOTE: Previously offered as 08-733. This course focuses on policy issues related to privacy from the perspectives of governments, organizations, and individuals. We will begin with a historical and philosophical study of privacy and then explore recent public policy issues. We will examine the privacy protections provided by laws and regulations, as well as the way technology can be used to protect privacy. We will emphasize technology-related privacy concerns and mitigation, for example: social networks, smartphones, behavioral advertising (and tools to prevent targeted advertising and tracking), anonymous communication systems, big data, and drones.  This is part of a series of courses offered as part of the MSIT-Privacy Engineering masters program. These courses may be taken in any order or simultaneously. Foundations of Privacy (Fall semester) offers more in-depth coverage of technologies and algorithms used to reason about and protect privacy. Engineering Privacy in Software (Spring semester) focuses on the methods and tools needed to design systems for privacy.  This course is intended primarily for graduate students and advanced undergraduate students with some technical background. Programming skills are not required. 8-733, 19-608, and 95-818 are 12-unit courses for PhD students. Students enrolled under these course numbers will have extra assignments and will be expected to do a project suitable for publication. 8-533 is a 9-unit course for undergraduate students. Masters students may register for any of the course numbers permitted by their program. This course will include a lot of reading, writing, and class discussion. Students will be able to tailor their assignments to their skills and interests. However, all students will be expected to do some writing and some technical work.
ISR17734 | Usable Privacy and Security | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17734&SEMESTER=S20 | instructors:Cranor, Lorrie description:Previously offered as 08-734. There is growing recognition that technology alone will not provide all of the solutions to security and privacy problems. Human factors play an important role in these areas, and it is important for security and privacy experts to have an understanding of how people will interact with the systems they develop. This course is designed to introduce students to a variety of usability and user interface problems related to privacy and security and to give them experience in designing studies aimed at helping to evaluate usability issues in security and privacy systems. The course is suitable both for students interested in privacy and security who would like to learn more about usability, as well as for students interested in usability who would like to learn more about security and privacy. Much of the course will be taught in a graduate seminar style in which all students will be expected to do a weekly reading assignment and each week different students will prepare a presentation for the class. Students will also work on a group project throughout the semester. The course is open to all graduate students who have technical backgrounds. The 12-unit course numbers (08-734 and 5-836) are for PhD students and masters students. Students enrolled in these course numbers will be expected to play a leadership role in a group project that produces a paper suitable for publication.  The 9-unit 500-level course numbers (08-534 and 05-436) are for juniors, seniors, and masters students. Students enrolled in these course numbers will  have less demanding project and presentation requirements.
ISR17735 | Engineering Privacy in Software | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17735&SEMESTER=S20 | instructors:Libert, Timothy description:Note: Previously offered as 08-605. Privacy harms that involve personal data can often be traced back to software design failures, which can be prevented through sound engineering practices. In this course, students will learn how to identify privacy threats due to surveillance activities that enhance modern information systems, including location tracking, behavioral profiling, recommender systems, and social networking. Students will learn to analyze systems to identify the core operating principles and technical means that introduce privacy threats, and they will learn to evaluate and mitigate privacy risks to individuals by investigating system design alternatives. Strategies to mitigating privacy risk will be based on emerging standards and reliable privacy preference data. Students will have the opportunity to study web-, mobile- and cyber-physical systems across a range of domains, including advertising, healthcare, law enforcement and social networking. In addition, students will know how, and when, to interface with relevant stakeholders, including legal, marketing and other developers in order to align software design with privacy policy and law.
ISR17737 | Artificial Intelligence Methods for Social Good | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17737&SEMESTER=S20 | instructors:Fang, Fei description:The rapid advance in artificial intelligence (AI) has opened up new possibilities of using AI to tackle the most challenging societal problems today. This course brings together a set of advanced AI methods that allow us to address such challenges and promote social good:  Optimization: mathematical programming, robust optimization, influence maximization Game Theory and Mechanism Design: security games, human behavior modeling, auction and market equilibrium, citizen science Machine Learning: classification, clustering, probabilistic graphical models, deep learning Sequential Decision Making: Markov Decision Processes (MDPs), partially observable MDPs, online planning, reinforcement learning In addition to providing a deep understanding of these methods, the course will introduce which societal challenges they can tackle and how, in the areas of (i) healthcare, (ii) social welfare, (iii) security and privacy, (iv) environmental sustainability. The course will also cover special topics such as AI and Ethics and AI and Humans.   The course content is designed to not have too much overlap with other AI courses offered at CMU. Although the course is listed within SCS, it should be of interest to students in several other departments, including ECE, EPP and SDS This 12-unit course is only open to graduate students (master and Ph.D. students) with previous programming experience and background knowledge in artificial intelligence. The students will work in groups on a research project with a research-style paper and an oral presentation delivered at the end of the semester. Please see the instructor if you are unsure whether your background is suitable for the course.
ISR17749 | Artificial Intelligence for Software Engineering | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17749&SEMESTER=F19 | instructors:Breaux, Travis description:Advances in artificial intelligence (AI) and machine learning (ML) offer new opportunities in software engineering to explore the design space and improve software quality. This includes discovering interactions among natural language requirements, prioritizing feature requests, and finding and fixing bugs. Consequently, software engineers must take on the role of data scientist, which entails curating datasets, understanding the trade-offs in statistical models, and learning to evaluate their models. This course aims to introduce students to advances in natural language processing (NLP), including symbolic and statistical NLP techniques, and in deep learning to analyze software artifacts. The course will emphasize algorithm setup and configuration, data preparation, analytic workflow, and evaluation. Datasets will be drawn from industrial requirements, mobile app reviews, bug reports and source code with documented vulnerabilities. At course end, students will understand terminology and have hands on experience to help guide their decisions in applying AI to contemporary engineering problems.
ISR17751 | Models of Software Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17751&SEMESTER=F19 | instructors:Garlan, DavidKang, Eunsuk description:This course is cross-listed with 17-651, Models of Software Systems. Please see the course description for 17-651 (also available at the URL listed above). Please note that 17-751 is a PhD level course. Please contact the instructor(s) for details related to satisfying the PhD requirement.
ISR17752 | Methods: Deciding What to Design: Methods What to Design | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17752&SEMESTER=F19 | instructors:Breaux, Travis description:This course was formerly titled Methods of Software Development, and is cross-listed with 17-652. Please see the course description for 17-652 (also available at the URL listed above).    Please note that 17-752 is a PhD level course. Please contact the instructor(s) for details related to satisfying the PhD requirement.
ISR17754 | Analysis of Software Artifacts | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17754&SEMESTER=S20 | instructors:Gennari, JeffreyKaestner, Christian description:(This PhD course is cross-listed with the MSE course,17-654.)  Analysis is the systematic examination of an artifact to determine its properties. This course will focus on analysis of software artifacts--primarily code, but also including analysis of designs, architectures, and test suites. We will focus on functional properties, but also cover non-functional properties like performance and security.  In order to illustrate core analysis concepts in some depth, the course will center on static program analysis; however, the course will also include a breadth of techniques such as testing, model checking, theorem proving, dynamic analysis, and type systems.    Concern for realistic and economical application of analysis will also be evident in a bias towards analyses that are scalable and incremental. The course emphasizes the fundamental similarities between analyses (in their mechanism and power) to teach the students the limitations and scope of the analyses, rather than the distinctions that arose historically (static vs. dynamic, code vs. spec). The course will balance theoretical discussions with lab exercises in which students will apply the ideas they are learning to real artifacts.    After completing this course, students will:        * know what kinds of analyses are available and how to use them      * understand their scope and power, when they can be applied and what conclusions can be drawn from their results      * have a grasp of fundamental notions sufficient to evaluate new kinds of analysis when they are developed      * have some experience selecting and writing analyses for a real piece of software, applying them and interpreting the results    In addition, Ph.D. students taking the 17-754 version of the course will gain a broad overview of the analysis research literature and in-depth knowledge of a particular sub-area through a course project.
ISR17755 | Architectures for Software Systems | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17755&SEMESTER=S20 | instructors:Bass, Matthew description:This course is cross-listed with 17-655, Architectures for Software Systems. Please see 17-655 for the course description. Please note that 17-755 is a PhD level course. Please contact the instructor(s) for details related to satisfying the PhD requirement.
ISR17762 | Law of Computer Technology | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17762&SEMESTER=F19 | instructors:Shamos, Michael description:NOTE: Previously offered as 08-732. A survey of how legislatures and courts cope with rapidly advancing computer technologies and how scientific information is presented to, and evaluated by, civil authorities.  The course is also an introduction to the legal process generally and the interaction between the legal system and technology organizations.  Topics include: patents, copyrights in a networked world, law of the Internet, free speech, data security, technology regulation, international law, and trans-border crime.  Open to juniors, seniors and graduate students in any school.  Open to sophomores by permission of the instructor.  Prerequisites: none.
ISR17766 | Software Engineering for Startups | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17766&SEMESTER=S20 | instructors:Hilton, MichaelMiller, Heather prereq:15213 or 15214 or 17214 or 17514 description:Startup engineering is critical to innovation.  The skills required to effectively prototype, launch, and scale products are vital to engineers everywhere, from fledgling companies founded in dorm rooms to local mid-size companies to internal startups from multi-national tech giants.  However, developing software in a startup environment poses unique engineering challenges.  These challenges include making and justifying foundational architectural and technical decisions despite extreme uncertainty; rapidly prototyping and evaluating new ideas and features, while building minimum viable products; prioritizing engineering effort in severely constrained environments; and communicating effectively both within a small engineering team and with internal and external non-technical stakeholders.  This course teaches the skills necessary to engineer successfully in a startup environment,   through lectures, group projects, case study discussions, and guest speakers drawn from experienced, practicing startup engineers. This is an engineering-focused course; no entrepreneurship background is required or expected.  Students do not need to have a startup idea to participate fully.  Prerequisites: 15-214 OR 15-213
ISR17769 | Mobile and IoT Computing Project: Mobile and IoT Computing Project | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17769&SEMESTER=S20 | instructors:Sadeh, Norman description:This course is restricted to Tepper students enrolled in 45-887.  With over 6 billion mobile phone users worldwide, including well over a 2 billion smart phone users, new wireless and pervasive computing applications and services are changing the way enterprises interact with customers and employees. The explosion in smart phone ownership along with the deployment of 4G and soon 5G networks is leading to a slew of new mobile apps and services. They range from mobile commerce and enterprise apps, social networking apps, all the way to more Internet of Things technologies (e.g. smart homes, smart cars, smart glasses, health/fitness sensors).  These apps and services are emerging as part of an increasingly rich ecosystem where context awareness and intelligent predictive technologies are used to offer increasingly personalized experiences to users. This same ecosystem has emerged as the engine behind increasingly targeted marketing and advertising scenarios that also raise challenging privacy issues.  The course objective is to introduce participants to the technologies, services and business models associated with Mobile and Pervasive Commerce. It also provides an overview of future trends and ongoing research.  You will learn to evaluate critical design tradeoffs associated with different mobile technologies, architectures, interfaces and business models and how they impact the usability, security, privacy and commercial viability of mobile and pervasive computing services and apps. Topics include Mobile Communications, Mobile OS, Mobile Web technologies  including app development, Mobile Security, Mobile Payments, Mobile Web Apps and Services (e.g. Mobile Entertainment, Mobile Banking, Mobile, Mobile Social Networking, Mobile Health, etc.), Location-Based Services, RFID, Mobile Enterprise Apps, Pervasive Computing Applications, Context awareness, intelligent assistant technologies, and privacy.
ISR17780 | API Design and Implementation | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17780&SEMESTER=S20 | instructors:Bloch, JoshGarrod, Charles description:This class focuses on the design of programming interfaces, the APIs, within larger real-world software and ecosystems. We discuss the history and importance of APIs, and the principles behind designing good APIs. This includes study of specific examples of APIs, both good and bad, for inspiration and precaution. Students gain experience with the major steps of API design: gathering requirements, documenting, testing, implementing, refining, evolving, and reimplementing APIs. The principles taught are largely language-independent, though most examples are in Java or C. Students may be able to do assignments in other languages, within reason. Prerequisite: 17-214 or 15-213 or equivalent experience with permission of instructor.
ISR17781 | Mobile and IoT Computing Services: Mobile and IoT Computing Services | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17781&SEMESTER=S20 | instructors:Sadeh, Norman description:With over 6 billion mobile phone users worldwide, including well over a 2 billion smart phone users, new wireless and pervasive computing applications and services are changing the way enterprises interact with customers and employees. The explosion in smart phone ownership along with the deployment of 4G and soon 5G networks is leading to a slew of new mobile apps and services. They range from mobile commerce and enterprise apps, social networking apps, all the way to more Internet of Things technologies (e.g. smart homes, smart cars, smart glasses, health/fitness sensors).  These apps and services are emerging as part of an increasingly rich ecosystem where context awareness and intelligent predictive technologies are used to offer increasingly personalized experiences to users. This same ecosystem has emerged as the engine behind increasingly targeted marketing and advertising scenarios that also raise challenging privacy issues.  The course objective is to introduce participants to the technologies, services and business models associated with Mobile and Pervasive Commerce. It also provides an overview of future trends and ongoing research.  You will learn to evaluate critical design tradeoffs associated with different mobile technologies, architectures, interfaces and business models and how they impact the usability, security, privacy and commercial viability of mobile and pervasive computing services and apps. Topics include Mobile Communications, Mobile OS, Mobile Web technologies  including app development, Mobile Security, Mobile Payments, Mobile Web Apps and Services (e.g. Mobile Entertainment, Mobile Banking, Mobile, Mobile Social Networking, Mobile Health, etc.), Location-Based Services, RFID, Mobile Enterprise Apps, Pervasive Computing Applications, Context awareness, intelligent assistant technologies, and privacy.
ISR17791 | Software Engineering Seminar | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17791&SEMESTER=S20 | instructors:Kaestner, Christian description:The Software Research Seminar (SSSG) at CMU relies on active participation and a supportive community to help students broaden their understanding of software research and hone their presentation skills. This document briefly outlines our expectations for Software Engineering Ph.D. students with respect to SSSG.
ISR17801 | Dynamic Network Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17801&SEMESTER=S20 | instructors:Carley, Kathleen prereq:36200 description:Who knows who? Who knows what? Who is influential? What is the social network, the knowledge network, the activity network? How do ideas, products  diseases propagate through groups and impact these networks? Does social media change the way these networks operate? Questions such as these  millions of others require a network perspective and an understanding of how ties among people, ideas, things,  locations connect, constrain  enable activity. In the past decade there has been an explosion of interest in network science moving from the work on social networks and graph theory to statistical and computer simulation models. Network analysis, like statistics, now plays an role in most empirical fields.  Network science is a broad and multi-disciplinary field. In this class, students will gain an appreciation of the history of the field, the difference between social networks and social media, the difference graph-based metrics for network analysis and graphical models, the use of traditional and high dimensional network models, and the advances in this field. Applications and issues discussed will include: social media analytics, semantic networks, task networks, organizational design and teams, machine learning and network analysis, generative models, terrorism and crime, health, and fake news. Methods for network data collection, analysis, visualization, and interpretation are covered. Students produce original research in which network data is analyzed using the methods covered in the class.
ISR17802 | Societal Computing Pre-Thesis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17802&SEMESTER=S20 | instructors:Carley, Kathleen description:Note: This course previously offered as 08-802. This course is provided by each Societal Computing advisor to coach the student in preparing, presenting, and passing a thesis proposal.  The proposal will generally occur in the semester where this course is taken.  If it is not, then, at the advisors discretion, an incomplete may be granted.  In that case, in accordance with university policy, the course must be completed (and the thesis passed) no later than the last day of the following semester, or the default grade will be awarded.
ISR17806 | Software Engineering Independent Study | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17806&SEMESTER=S20 | instructors:Aldrich, Jonathan description:The independent study course is appropriate to take for a learning activity that is neither covered by existing courses nor in independent research. At the ISR PhD.D level, students focus on formal coursework and independent research, so the independent study course is taken rarely. If students are interested in the possibility, you should speak with the faculty member who would guide you in the independent study, along with your prospective advisor(s).   The Independent Study should be a structured activity with an outcome that can be evaluated.  Students must fill out a SE PhD.D. Independent Study Prospectus prior to course registration.
ISR17808 | Software Engineering Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17808&SEMESTER=F19 | instructors:Miller, HeatherBreaux, TravisGarlan, DavidAldrich, JonathanHerbsleb, JamesShaw, MaryKaestner, ChristianLe Goues, ClaireVasilescu, Bogdan description:This course prepares PhD students to begin research in software  engineering. It introduces important ideas across the breadth of software  engineering and the major research strategies of the field. Students  will become familiar with the structure of the field; they will learn  the seminal ideas and developments that led to current research  questions; they will learn to critique research papers to evaluate  their claims and evidence; and they will also become familiar with the  current research themes at CMU.
ISR17819 | Special Topics in Programming Languages: Program Analysis | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17819&SEMESTER=S20 | instructors:Le Goues, Claire description:This course covers both foundations and practical aspects of the automated analysis of programs, which is becoming increasingly critical to find software errors and assure program correctness. The theory of abstract interpretation captures the essence of a broad range of program analyses and supports reasoning about their correctness. Building on this foundation, the course will describe program representations, data flow analysis, alias analysis, inter-procedural analysis, dynamic analysis, Hoare Logic, and symbolic execution. Through assignments and projects, students will design and implement practical analysis tools that find bugs and verify properties of software. This course satisfies the Logic and Languages constrained elective category of the Computer Science major, and the Technical Software Engineering requirement for the Software Engineering minor.  Prerequisites: 15-251 and (15-150 or 15-214).  Related URL: http://www.cs.cmu.edu/aldrich/courses/17-355-18sp/
ISR17960 | Language Design and Prototyping: Language Design and Prototyping | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17960&SEMESTER=S20 | instructors:Aldrich, Jonathan prereq:15213 or 17214 or 17514 description:Many programmers think of programming languages as having a fixed, standard set of features--but in fact, languages are being extended all the time, and new languages are constantly being developed, providing great expressive power.  In this course, students will learn about techniques for designing and prototyping programming languages.  Design topics include language features, a practical approach to semantics, conceptual design techniques, and examples of both general purpose and domain-specific language designs.  Prototyping topics include interpreters, source-to-source translators, languages as libraries, and paper prototyping techniques used for lightweight user evaluations.  In course assignments, students will practice design and prototyping techniques, implementing prototype languages in several different styles.  The course will end with a project in which students design, implement, and evaluate their own programming language.
ISR17993 | Societal Computing Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17993&SEMESTER=S20 | instructors:Christin, Nicolas description:Note: This course previously offered as 08-997. Societal Computing PhD Students only sign up for Reading  Research.
ISR17994 | Societal Computing Practicum | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17994&SEMESTER=S20 | instructors:Herbsleb, James description:Purpose: The Practicum will fulfill its dual functions of providing an essential introduction to the discipline of Societal Computing as practiced at CMU, and to build some of the skills that all graduate students need as they transition from an undergraduate to a graduate student mind set. Practicum Syllabus: Societal Computing Topics Literature review. Write a literature review, working with adviser to pick topic and identify research questions. Writing includes critiquing papers being synthesized in the review. This is intended to be a short form literature review of approximately 2-4 pages, of the sort that typically introduces a conference paper. What makes good interdisciplinary research? While each research group focuses continuously on this topic, the practicum will provide a broader view, e.g., by inviting a senior researcher from ISR or SCS to share reflections on their own research strategies, key choices they made in their careers, and advice they can offer budding researchers. What is SC about? Hear from and interact with SC faculty members to see the breadth of research topics, methods, and policy concerns within SC.
ISR17995 | Societal Computing Practicum Internship | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17995&SEMESTER=S20 | instructors:Christin, Nicolas description:Note: This course previously offered as 08-995. Students will register for this course if they plan to participate in a internship opportunity during the academic semester. Internships require CPT approval for international students. Internships must begin and end matching the CMU summer academic calendar. If this does not occur international students will be required to use OPT to cover the non-academic time. Students are required to submit a description of what was accomplished during their internship. Students must turn this into their current advisers for credit, and grading. This 3 unit course will count towards the required electives of the program.
ISR17996 | Societal Computing Independent Study | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17996&SEMESTER=S20 | instructors:Carley, Kathleen description:Note: This course previously offered as 08-996. Independent Study Course for Societal Computing
ISR17997 | Graduate Reading and Research | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17997&SEMESTER=S20 | instructors:Kaestner, Christian description:Graduate Reading and Research for Software Engineering PhD Students.  Only Software Engineering PhD students should register for this course
ISR17998 | Software Engineering Practicum Internship | https://enr-apps.as.cmu.edu/open/SOC/SOCServlet/courseDetails?COURSE=17998&SEMESTER=S20 | instructors:Aldrich, Jonathan description:Students will register for this course if they plan to participate in a internship opportunity during the academic semester.    Internships require CPT approval for international students.  Internships must begin and end matching the CMU summer academic calendar. If this does not occur international students will be required to use OPT to cover the non-academic time.    Students are required to submit a description of what was accomplished during their internship. Students must turn this into their current advisers for credit, and grading.  This 3 unit course will count towards the required electives of the program. ** Please note students must continue to take at least 21 units of course work at 6+ units or higher each for elective credit.
